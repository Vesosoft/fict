/*! chessboard-1.0.0.min.js | MIT License */
function Chessboard(containerId, config) {
  const boardEl = document.getElementById(containerId);
  if (!boardEl) return console.error('Element not found: ' + containerId);

  const files = ['a','b','c','d','e','f','g','h'];
  const ranks = ['8','7','6','5','4','3','2','1'];

  boardEl.className = 'chessboard';
  boardEl.innerHTML = '';

  for (let r = 0; r < 8; r++) {
    for (let f = 0; f < 8; f++) {
      const square = document.createElement('div');
      square.className = 'square ' + ((r + f) % 2 === 0 ? 'white' : 'black');
      square.dataset.square = files[f] + ranks[r];
      boardEl.appendChild(square);
    }
  }

  if (config.showNotation) {
    const squares = boardEl.querySelectorAll('.square');
    squares.forEach(sq => {
      const file = sq.dataset.square.charAt(0);
      const rank = sq.dataset.square.charAt(1);
      if (file === 'a') {
        const rankLabel = document.createElement('div');
        rankLabel.className = 'rank-label';
        rankLabel.textContent = rank;
        sq.appendChild(rankLabel);
      }
      if (rank === '1') {
        const fileLabel = document.createElement('div');
        fileLabel.className = 'file-label';
        fileLabel.textContent = file;
        sq.appendChild(fileLabel);
      }
    });
  }

  const position = config.position || 'start';
  const pieceTheme = config.pieceTheme || 'img/{piece}.png';

  function setPosition(fen) {
    const pieceMap = {
      p:'bP', r:'bR', n:'bN', b:'bB', q:'bQ', k:'bK',
      P:'wP', R:'wR', N:'wN', B:'wB', Q:'wQ', K:'wK'
    };
    const squares = boardEl.querySelectorAll('.square');
    squares.forEach(sq => sq.innerHTML = '');
    const rows = (fen === 'start' ? 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR' : fen.split(' ')[0]).split('/');
    for (let r = 0; r < 8; r++) {
      let file = 0;
      for (const ch of rows[r]) {
        if (!isNaN(ch)) {
          file += parseInt(ch);
        } else {
          const sq = boardEl.querySelector(`[data-square="${files[file]}${ranks[r]}"]`);
          const piece = document.createElement('img');
          piece.className = 'piece';
          piece.src = pieceTheme.replace('{piece}', pieceMap[ch]);
          sq.appendChild(piece);
          file++;
        }
      }
    }
  }

  setPosition(position);

  return {
    setPosition
  };
}
